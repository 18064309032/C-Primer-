#include <string>

class HasPtr
{
private:
	std::string* ps;
	int i;
	std::size_t* use;
public:
	HasPtr(const std::string& str = std::string())
		:ps(new std::string(str)), i(0), use(new std::size_t(1)) {}
	HasPtr(const HasPtr& hp) :ps(hp.ps), i(hp.i), use(hp.use) { ++*use; }
	HasPtr& operator=(const HasPtr& hp)
	{
		++* hp.use;
		if (-- * use == 0)
		{
			delete ps;
			delete use;
		}
		ps = hp.ps;
		i = hp.i;
		use = hp.use;
		return *this;
	}
	~HasPtr()
	{
		if (--*use == 0)
		{
			delete ps;
			delete use;
		}
	}
};